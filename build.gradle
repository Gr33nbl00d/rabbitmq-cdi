buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.8
version = '1.0-SNAPSHOT'
group = 'net.reini'

defaultTasks 'build'

jar {
    manifest {
        attributes 'Implementation-Title': 'RabbitMQ CDI extension',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'javax.enterprise:cdi-api:1.2'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.rabbitmq:amqp-client:3.5.4'
    
    testCompile 'junit:junit:4.+'
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


signing {
    required { !project.version.contains("-SNAPSHOT") }
    sign configurations.archives
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "~/m2")
        snapshotRepository(url: "~/m2")

        beforeDeployment { 
            MavenDeployment deployment -> signing.signPom(deployment)
        }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        pom.project {
            name 'Example Application'
            packaging 'jar'
            description 'Enables CDI based usage of RabbitMQ within a JavaEE application.'
			licenses {
                license {
                    name "MIT License"
                    url "http://www.opensource.org/licenses/mit-license.php"
                    distribution "repo"
                }
			}
            url "https://github.com/reinhapa/rabbitmq-cdi.git"
            scm {
                connection "scm:git:https://github.com/reinhapa/rabbitmq-cdi.git"
                developerConnection "scm:git:https://github.com/reinhapa/rabbitmq-cdi.git"
                url "https://github.com/reinhapa/rabbitmq-cdi"
            }
            developers {
                developer {
                    id "reinhapa"
                    name "Patrick Reinhart"
                    email "patrick@reini.net"
                }
            }
        }
    }
}